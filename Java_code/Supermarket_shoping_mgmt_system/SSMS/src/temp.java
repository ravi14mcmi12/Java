
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ravi
 */
public class temp extends javax.swing.JFrame {

    /**
     * Creates new form temp
     */
    public temp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd_Gold = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Gold = new javax.swing.JTable();
        cmd_finsh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_Silver = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_Bronze = new javax.swing.JTable();
        cmd_Silver = new javax.swing.JButton();
        cmd_Bronze = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmd_Gold.setText("Show");
        cmd_Gold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_GoldActionPerformed(evt);
            }
        });

        table_Gold.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "      Gold"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_Gold);

        cmd_finsh.setText("Finshed");
        cmd_finsh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cmd_finsh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_finshActionPerformed(evt);
            }
        });

        jLabel1.setText("   Winner List  ");

        table_Silver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "     Silver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_Silver);

        table_Bronze.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Bronze"
            }
        ));
        jScrollPane3.setViewportView(table_Bronze);

        cmd_Silver.setText("Show");
        cmd_Silver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_SilverActionPerformed(evt);
            }
        });

        cmd_Bronze.setText("show");
        cmd_Bronze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_BronzeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(cmd_Gold, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(1, 1, 1)
                                .addComponent(cmd_Silver, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(cmd_Bronze, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(cmd_finsh, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmd_Bronze)
                            .addComponent(cmd_Gold)
                            .addComponent(cmd_Silver))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(cmd_finsh)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_GoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_GoldActionPerformed
        // TODO add your handling code here:
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) table_Gold.getModel();
        model.getDataVector().removeAllElements(); javax.swing.table.DefaultTableModel model1;
               
         try{
             String sql1,sql2,sql3;
            Class.forName("com.mysql.jdbc.Driver");   
            String host  =  "jdbc:mysql://localhost:3306/mysql";
            String uName = "root";
            String uPass =  "maa";
           
            Connection con = DriverManager.getConnection(host,uName,uPass);
            Statement stmt = con.createStatement( );
             sql1= "select name from customer where id in(select id from creditTable where point>250)";
            // sql2= "select name from customer where id in(select id from creditTable where point>150 and point<250)";
            //sql3= "select name from customer where id in(select id from creditTable where point>50 and point<150)";
            System.out.println(sql1);
            
            java.sql.PreparedStatement ps = con.prepareStatement(sql1);
            java.sql.ResultSet rs = ps.executeQuery();
            rs.beforeFirst();
            
           /* ps = con.prepareStatement(sql2);
            java.sql.ResultSet rs1 = ps.executeQuery();
             rs1.beforeFirst();
             
            ps = con.prepareStatement(sql3);
            java.sql.ResultSet rs2 = ps.executeQuery();
             rs2.beforeFirst();
           */
            
            while(rs.next()/* && rs1.next() && rs2.next()*/){
                model.addRow(new Object[]{rs.getString(1)/*,rs1.getString(1),rs2.getString(1)*/});
            }       
           
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(temp.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        
    }//GEN-LAST:event_cmd_GoldActionPerformed

    private void cmd_finshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_finshActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_ssms().setVisible(true);
            }
        });
    }//GEN-LAST:event_cmd_finshActionPerformed

    private void cmd_SilverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_SilverActionPerformed
        // TODO add your handling code here:
         javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) table_Silver.getModel();
        model.getDataVector().removeAllElements(); javax.swing.table.DefaultTableModel model1;
                     
         try{
             String sql2;
            Class.forName("com.mysql.jdbc.Driver");   
            String host  =  "jdbc:mysql://localhost:3306/mysql";
            String uName = "root";
            String uPass =  "maa";
           
            Connection con = DriverManager.getConnection(host,uName,uPass);
            Statement stmt = con.createStatement( );
            
            sql2= "select name from customer where id in(select id from creditTable where point>150 and point<250)";
            
            System.out.println(sql2);
            
            java.sql.PreparedStatement ps = con.prepareStatement(sql2);
            java.sql.ResultSet rs = ps.executeQuery();
            rs.beforeFirst();
            
           /* ps = con.prepareStatement(sql2);
            java.sql.ResultSet rs1 = ps.executeQuery();
             rs1.beforeFirst();
             
            ps = con.prepareStatement(sql3);
            java.sql.ResultSet rs2 = ps.executeQuery();
             rs2.beforeFirst();
           */
            
            while(rs.next()/* && rs1.next() && rs2.next()*/){
                model.addRow(new Object[]{rs.getString(1)/*,rs1.getString(1),rs2.getString(1)*/});
            }       
           
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(temp.class.getName()).log(Level.SEVERE, null, ex);
        }
               
    }//GEN-LAST:event_cmd_SilverActionPerformed

    private void cmd_BronzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_BronzeActionPerformed
        // TODO add your handling code here:
         javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) table_Bronze.getModel();
        model.getDataVector().removeAllElements(); javax.swing.table.DefaultTableModel model1;
                     
         try{
             String sql3;
            Class.forName("com.mysql.jdbc.Driver");   
            String host  =  "jdbc:mysql://localhost:3306/mysql";
            String uName = "root";
            String uPass =  "maa";
           
            Connection con = DriverManager.getConnection(host,uName,uPass);
            Statement stmt = con.createStatement( );
            
            sql3= "select name from customer where id in(select id from creditTable where point>50 and point<150)";
            
            System.out.println(sql3);
            
            java.sql.PreparedStatement ps = con.prepareStatement(sql3);
            java.sql.ResultSet rs = ps.executeQuery();
            rs.beforeFirst();
            
           /* ps = con.prepareStatement(sql2);
            java.sql.ResultSet rs1 = ps.executeQuery();
             rs1.beforeFirst();
             
            ps = con.prepareStatement(sql3);
            java.sql.ResultSet rs2 = ps.executeQuery();
             rs2.beforeFirst();
           */
            
            while(rs.next()/* && rs1.next() && rs2.next()*/){
                model.addRow(new Object[]{rs.getString(1)/*,rs1.getString(1),rs2.getString(1)*/});
            }       
           
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(temp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmd_BronzeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws ClassNotFoundException, SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new temp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_Bronze;
    private javax.swing.JButton cmd_Gold;
    private javax.swing.JButton cmd_Silver;
    private javax.swing.JButton cmd_finsh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table_Bronze;
    private javax.swing.JTable table_Gold;
    private javax.swing.JTable table_Silver;
    // End of variables declaration//GEN-END:variables
}